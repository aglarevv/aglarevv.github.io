<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>十三个九的 Blog</title><link>https://aglarevv.github.io/</link><description>简介</description><copyright>十三个九的 Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://aglarevv.github.io/icon2.svg</url><title>avatar</title><link>https://aglarevv.github.io/</link></image><lastBuildDate>Thu, 19 Sep 2024 08:56:32 +0000</lastBuildDate><managingEditor>十三个九的 Blog</managingEditor><ttl>60</ttl><webMaster>十三个九的 Blog</webMaster><item><title>zabbix</title><link>https://aglarevv.github.io//post/zabbix.html</link><description># zabbix&#13;
&#13;
&lt;details&gt;&#13;
&lt;summary&gt;安装步骤&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
**zabbix服务器上：**&#13;
&#13;
1、下载&#13;
 ```&#13;
rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm&#13;
```&#13;
```&#13;
yum clean all&#13;
```&#13;
```&#13;
yum install zabbix-server-mysql zabbix-agent&#13;
```&#13;
2、更换SCL源&#13;
```&#13;
yum install centos-release-scl &#13;
```&#13;
```&#13;
cd /etc/yum.repos.d/&#13;
mv CentOS-SCLo-scl.repo CentOS-SCLo-scl.repo.bak&#13;
mv CentOS-SCLo-scl-rh.repo CentOS-SCLo-scl-rh.repo.bak&#13;
```&#13;
3、编辑SCL&#13;
&gt; vim CentOS-SCLo-scl-rh.repo&#13;
&#13;
```&#13;
[centos-sclo-rh]&#13;
name=CentOS-7 - SCLo rh&#13;
baseurl=https://mirrors.aliyun.com/centos/7/sclo/x86_64/rh/&#13;
gpgcheck=1&#13;
enabled=1&#13;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo&#13;
```&#13;
4、安装前台页面&#13;
```&#13;
yum  install  zabbix-web-mysql-scl zabbix-apache-conf-scl   &#13;
```&#13;
```&#13;
yum -y install mariadb mariadb-server&#13;
```&#13;
5、启动数据库&#13;
```&#13;
systemctl enable mariadb&#13;
```&#13;
```&#13;
systemctl start mariadb&#13;
```&#13;
6、授权数据库&#13;
```&#13;
mysql&#13;
```&#13;
```&#13;
create database zabbix character set utf8 collate utf8_bin;&#13;
```&#13;
```&#13;
 create user zabbix@localhost identified by 'AGLAREvv.1';&#13;
```&#13;
```&#13;
grant all privileges on zabbix.* to zabbix@localhost;&#13;
```&#13;
```&#13;
flush privileges;&#13;
```&#13;
```&#13;
exit&#13;
```&#13;
7、初始化zabbix&#13;
```&#13;
 zcat /usr/share/doc/zabbix-server-mysql-5.0.43/create.sql.gz | mysql -u zabbix -p zabbix &#13;
```&#13;
8、配置账号密码&#13;
&gt; vim /etc/zabbix/zabbix_server.conf&#13;
&#13;
```&#13;
DBHost=localhost&#13;
DBName=zabbix&#13;
DBUser=zabbix&#13;
DBPassword=AGLAREvv.1&#13;
```&#13;
9、启动zabbix&#13;
```&#13;
systemctl enable zabbix-server.service &#13;
```&#13;
```&#13;
systemctl start zabbix-server.service &#13;
```&#13;
10、配置zabbix前端php&#13;
&gt; vim  /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf&#13;
只需更改时区为 Asia/Shanghai&#13;
&#13;
11、启动服务&#13;
```&#13;
systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm&#13;
```&#13;
```&#13;
systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm &#13;
```&#13;
12、进入前台页面（本机ip:80/zabbix）按照指示操作&#13;
&gt; ![image](https://github.com/user-attachments/assets/94e6ea10-98a9-461a-b56c-8d9721419815)&#13;
&#13;
&gt; ![image](https://github.com/user-attachments/assets/a54b8b61-3b9f-4971-b2d6-9e141c5cbccc)&#13;
&#13;
&gt; ![image](https://github.com/user-attachments/assets/7daa1f89-ba26-45fa-a515-245bd7f3a451)&#13;
&#13;
&gt; ![image](https://github.com/user-attachments/assets/dbec2026-015b-4530-99c0-35f1da04f2e0)&#13;
&#13;
&gt; ![image](https://github.com/user-attachments/assets/a6c99e84-3246-4156-bec6-533143819b3e)&#13;
&#13;
**被监控主机上：**&#13;
1、设置主机名&#13;
```&#13;
hostname  web1&#13;
```&#13;
2、关闭防火墙，selinux&#13;
3、准备镜像源&#13;
&gt; vim /etc/yum.repos.d/zabbix.repo &#13;
&#13;
```&#13;
[zabbix]&#13;
name=alibaba zabbix&#13;
baseurl=https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/&#13;
gpgcheck=0&#13;
enabled=1&#13;
&#13;
[zabbix2]&#13;
name=alibaba zabbix frontend&#13;
baseurl=https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/frontend/&#13;
gpgcheck=0&#13;
enabled=1&#13;
```&#13;
4、安装&#13;
```&#13;
yum -y install zabbix-agent&#13;
```&#13;
5、修改服务器地址&#13;
&gt; vim /etc/zabbix/zabbix_agentd.conf&#13;
修改Server、ServerActive、Hostname值&#13;
&#13;
```&#13;
Server=192.168.209.143,192.168.100.11             被动模式 zabbix-server-ip    &#13;
ServerActive=192.168.209.143,192.168.100.11    主动模式  zabbix-server-ip    &#13;
Hostname=web1 &#13;
```&#13;
6、启动zabbix-agent&#13;
```&#13;
systemctl start zabbix-agent&#13;
```&#13;
```&#13;
systemctl enable zabbix-agent&#13;
```&#13;
**至此结束**&#13;
&lt;/details&gt;&#13;
。</description><guid isPermaLink="true">https://aglarevv.github.io//post/zabbix.html</guid><pubDate>Thu, 19 Sep 2024 02:23:50 +0000</pubDate></item><item><title>Redis</title><link>https://aglarevv.github.io//post/Redis.html</link><description>## redis安装&#13;
&lt;details&gt;&#13;
&lt;summary&gt;安装&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
1、下载依赖&#13;
```&#13;
yum install -y gcc&#13;
```&#13;
2、下载redis-5.0.10，下载链接：[https://pan.quark.cn/s/5375bb15ccba](https://pan.quark.cn/s/5375bb15ccba)&#13;
3、解压缩&#13;
```&#13;
tar -zxvf redis-5.0.10.tar.gz&#13;
```&#13;
4、进入redis根目录&#13;
```&#13;
cd redis-5.0.10&#13;
```&#13;
5、复制配置文件&#13;
```&#13;
mkdir -p /etc/redis/&#13;
cp redis.conf /etc/redis/&#13;
```&#13;
6、编译安装&#13;
```&#13;
make &amp;&amp; make install&#13;
```&#13;
7、启动redis&#13;
&gt;默认监听6379端口，前台启动&#13;
后台启动：修改配置文件里 daemonize=no 改为 daemonize=yes&#13;
&#13;
```&#13;
redis-server /etc/redis/redis.conf&#13;
```&#13;
**至此完成&#13;
&lt;/details&gt;&#13;
&#13;
## redis主从复制&#13;
&lt;details&gt;&#13;
&lt;summary&gt;主从复制&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
1、修改配置&#13;
- 主机：&#13;
1. 更改配置文件，绑定ip&#13;
```&#13;
bind 0.0.0.0&#13;
```&#13;
- 从机：&#13;
1. 更改配置文件&#13;
&gt; 在 port 6379 后添加 slaveof 主机ip  redis端口号。</description><guid isPermaLink="true">https://aglarevv.github.io//post/Redis.html</guid><pubDate>Fri, 13 Sep 2024 12:24:06 +0000</pubDate></item><item><title>nginx的安装</title><link>https://aglarevv.github.io//post/nginx-de-an-zhuang.html</link><description># 安装步骤&#13;
1、依赖下载&#13;
```&#13;
yum install -y zlib zlib-devel openssl openssl-devel pcre pcer-devel wget httpd-tools vim gcc gcc-c++&#13;
```&#13;
2、nginx下载&#13;
```&#13;
wget https://nginx.org/download/nginx-1.26.2.tar.gz&#13;
```&#13;
3、解压&#13;
```&#13;
 tar -zxvf nginx-1.26.2.tar.gz&#13;
```&#13;
4、编译安装&#13;
```&#13;
make &amp;&amp; make install&#13;
```&#13;
5、开启nginx&#13;
```&#13;
/usr/local/nginx/sbin/nginx&#13;
```&#13;
**至此完成**&#13;
。</description><guid isPermaLink="true">https://aglarevv.github.io//post/nginx-de-an-zhuang.html</guid><pubDate>Fri, 13 Sep 2024 08:28:17 +0000</pubDate></item><item><title>Linux系统管理</title><link>https://aglarevv.github.io//post/Linux-xi-tong-guan-li.html</link><description>&lt;details&gt;&#13;
&lt;summary&gt;Linux系统管理&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
1、Linux中链接的分类？&#13;
- 分为软、硬链接，命令：分别为 ln -s 和 ln&#13;
&#13;
2、编写好的shell程序在运行前要赋予什么权限？&#13;
- 赋予执行权限，命令： chmod +x 文件名&#13;
&#13;
3、唯一辨识每个用户的方法？&#13;
- 根据uid和用户名，命令 id查看&#13;
&#13;
4、在Linux系统中，存放系统所需要的配置文件和子目录的目录是？&#13;
- /etc&#13;
&#13;
5、结束后台进程命令？&#13;
- kill -9 进程号&#13;
&#13;
6、在超级用户下显示正在运行的全部进程使用的命令？&#13;
- ps -ef&#13;
&#13;
7、删除文件和目录命令？&#13;
- rm -rf&#13;
&#13;
8、移动文件和目录命令？&#13;
- mv&#13;
&#13;
9、增加一个用户命令？&#13;
- useradd&#13;
&#13;
10、终止一个前台进程可能用到的命令和操作？&#13;
- kill&#13;
&#13;
11、使用mkdir创建目录时，父目录不存在，如何创建？&#13;
- mkdir -p 目录&#13;
&#13;
12、文件名为test.tar.gz，如何解压缩？&#13;
- tar -zxvf&#13;
&#13;
13、一台计算机内存为128MB，交换分区的大小通常是？&#13;
- 64MB&#13;
&#13;
14、将光盘（CD-ROM）hdc 挂载到文件系统的/mnt/cdrom/目录的命令？&#13;
- mount /dev/hdc /mnt/cdrom&#13;
&#13;
15、描述一下归档和压缩？&#13;
- unzip和gzip命令可以压缩相同类型的文件&#13;
&#13;
16、描述raid0、1、5的特点和优点？&#13;
- raid0：最少要2块磁盘、数据条带式分布、没有冗余，性能最佳：因为不存储镜像和检验信息、不能应用于对数据安全性较高的场合&#13;
- raid1：最少要2块磁盘、提供数据冗余、性能好&#13;
- raid5：最少要3块磁盘、数据条带式分布、用奇偶校验作冗余、适合读多写少的场景：是性能与数据冗余最佳的折中方案&#13;
&#13;
17、在/etc/fstab 文件中指定的文件系统加载参数，什么参数用于CD-ROM？&#13;
- noauto，表示手动挂载&#13;
&#13;
18、Linux文件权限一共10位长度，分成四段，第三段表示？&#13;
- 文件所有者所在组的权限&#13;
&#13;
19、如何判断windows操作系统是32位还是64位？&#13;
- 在【我的电脑】属性中查看&#13;
&#13;
20、Linux系统关机、重启、文件赋权命令？&#13;
- poweroff、reboot、chmod&#13;
&#13;
21、Linux系统查看定时任务命令？&#13;
- crontab -l&#13;
&#13;
22、Linux系统查看MAC地址？&#13;
- ip a&#13;
&#13;
23、Linux系统新建一个叫oracle的用户的命令？设置密码？&#13;
- useradd oracle &#13;
- passwd oracle&#13;
&#13;
24、Linux从ip为10.0.4.100远程主机复制/root/script.sh文件到/databases/oracle的命令？&#13;
- scp 10.0.4.100:/root/script.sh /databases/oracle&#13;
&#13;
25、Linux系统查看进程中含有oracle关键字的进行信息？杀死进程id为29324的命令？&#13;
- ps aux | grep oracle&#13;
- kill -9 29324&#13;
&#13;
26、查看Linux系统的磁盘空间情况？将/dev/sdb文件系统挂载到/data2目录下？&#13;
- df -Th&#13;
- mount /dev/sdb /data2&#13;
&#13;
27、输出数字0到100中3的倍数？&#13;
```&#13;
for i in {1..100}&#13;
do&#13;
 if [[$(($i % 3)) -eq 0 ]]; then&#13;
    echo $i&#13;
 fi&#13;
done&#13;
```&#13;
28、假设服务器有6快900G本地硬盘，单块硬盘io约为150M/S，现对硬盘进行RAID划分，6快盘做成RAID5级别后实际存储大小？理论实际io大小？&#13;
```&#13;
理论上6块盘做raid5，1块做冗余，因为有检验位。</description><guid isPermaLink="true">https://aglarevv.github.io//post/Linux-xi-tong-guan-li.html</guid><pubDate>Thu, 12 Sep 2024 10:59:52 +0000</pubDate></item><item><title>使用jenkins实现ci</title><link>https://aglarevv.github.io//post/shi-yong-jenkins-shi-xian-ci.html</link><description># Jenkins安装步骤：&#13;
&#13;
## 依赖工具下载：&#13;
&#13;
&lt;details&gt;&#13;
&lt;summary&gt;安装JDK11和tomcat9&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
1、安装JDK11，下载链接（夸克网盘）：[https://pan.quark.cn/s/695de4a60e36](https://pan.quark.cn/s/695de4a60e36)&#13;
2、安装tomcat9，下载链接（夸克网盘）：[https://pan.quark.cn/s/d85d7ad18015](https://pan.quark.cn/s/d85d7ad18015)&#13;
3、解压JDK和tomcat&#13;
```&#13;
 tar -zxvf jdk-11.0.16_linux-x64_bin.tar.gz &amp;&amp; tar -zxvf apache-tomcat-9.0.79.tar.gz &#13;
```&#13;
4、移动并重命名&#13;
```&#13;
mv jdk-11.0.16 /usr/local/java &amp;&amp; mv apache-tomcat-9.0.79 /usr/local/tomcat&#13;
```&#13;
5、添加环境变量&#13;
&gt; vim /etc/profile.d/java.sh&#13;
&#13;
```&#13;
TOMCAT_HOME=/usr/local/tomcat&#13;
JAVA_HOME=/usr/local/java&#13;
PATH=$TOMCAT_HOME/bin:$JAVA_HOME/bin:$PATH&#13;
export TOMCAT_HOME JAVA_HOME PATH&#13;
```&#13;
6、刷新环境变量&#13;
```&#13;
source /etc/profile.d/java.sh&#13;
```&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&#13;
&lt;summary&gt;Maven-3.8.8安装&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
1、下载链接（夸克网盘）：[https://pan.quark.cn/s/1e24cebf5469](https://pan.quark.cn/s/1e24cebf5469)&#13;
或者从官网下载&#13;
```&#13;
wget https://dlcdn.apache.org/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz&#13;
```&#13;
2、解压安装并移动&#13;
```&#13;
tar -zxvf apache-maven-3.8.8-src.tar.gz&#13;
mv apache-maven-3.8.8 /usr/local/maven&#13;
```&#13;
3、配置环境变量&#13;
&gt; vim /etc/profile.d/jenkins_tools.sh&#13;
&#13;
```&#13;
export M2_HOME=/usr/local/maven &#13;
export M2=$M2_HOME/bin &#13;
PATH=$M2:$PATH:$HOME/bin:/usr/local/git/bin &#13;
export MAVEN_HOME=/usr/local/maven &#13;
export PATH=${MAVEN_HOME}/bin:$PATH &#13;
```&#13;
4、刷新环境变量&#13;
```&#13;
source /etc/profile.d/jenkins_tools.sh&#13;
```&#13;
&lt;/details&gt;&#13;
&#13;
&lt;details&gt;&#13;
&lt;summary&gt;Git-2.9.5安装&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
下载链接（夸克网盘）：[https://pan.quark.cn/s/ded8b6c5488f](https://pan.quark.cn/s/ded8b6c5488f) ，使用此方式下载可跳过第2步&#13;
1、安装依赖&#13;
```&#13;
yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker     fontconfig  -y&#13;
```&#13;
2、安装git&#13;
```&#13;
wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.9.5.tar.gz&#13;
```&#13;
3、解压并进入到解压目录&#13;
```&#13;
tar -zxvf git-2.9.5.tar.gz  &amp;&amp; cd git-2.9.5/&#13;
```&#13;
4、编译并安装在/usr/local/git 目录下&#13;
```&#13;
make prefix=/usr/local/git all &amp;&amp; make prefix=/usr/local/git install&#13;
```&#13;
5、添加环境变量&#13;
&gt; vim /etc/bashrc &#13;
&#13;
```&#13;
PATH=$PATH:$HOME/bin:/usr/local/git/bin&#13;
```&#13;
6、刷新环境变量&#13;
```&#13;
source /etc/bashrc&#13;
```&#13;
&lt;/details&gt;&#13;
&#13;
## 正式开始安装jenkins-2.422&#13;
&lt;details&gt;&#13;
&lt;summary&gt;安装jenkins-2.422&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
1、下载jenkins，下载链接（夸克网盘）：[https://pan.quark.cn/s/f01fe8312095](https://pan.quark.cn/s/f01fe8312095)&#13;
2、删除tomcat下webapp所有文件&#13;
```&#13;
rm -rf /usr/local/tomcat/webapps/*&#13;
```&#13;
3、复制jenkins.war到webapp下&#13;
```&#13;
cp jenkins.war /usr/local/tomcat/webapps/&#13;
```&#13;
4、启动tomcat并访问（本机ip:8080/jenkins）&#13;
```&#13;
 /usr/local/tomcat/bin/startup.sh&#13;
```&#13;
5、等待片刻，解锁jenkins&#13;
![image](https://github.com/user-attachments/assets/2d793a12-ed80-4eda-87c1-8bb6ee501617)&#13;
6、下载插件，等待安装完成&#13;
![image](https://github.com/user-attachments/assets/82fb5514-91b7-493b-b9ab-6ce5663c7eb9)&#13;
7、创建用户&#13;
8、系统配置Manage Jenkins&#13;
- system中找到【全局属性】勾选 Environment variables，新增环境变量 JAVA_HOME 和 MAVEN_HOME 后保存。</description><guid isPermaLink="true">https://aglarevv.github.io//post/shi-yong-jenkins-shi-xian-ci.html</guid><pubDate>Wed, 11 Sep 2024 13:14:03 +0000</pubDate></item><item><title>GitLab</title><link>https://aglarevv.github.io//post/GitLab.html</link><description># GitLab部署步骤：&#13;
1、关闭防火墙&#13;
2、下载依赖&#13;
```&#13;
yum install -y  curl policycoreutils openssh-server openssh-clients  postfix &#13;
```&#13;
3、设置开机自启&#13;
```&#13;
systemctl enable sshd&#13;
systemctl start sshd&#13;
systemctl enable postfix&#13;
systemctl start postfix&#13;
```&#13;
4、下载gitlab，下载连接（夸克网盘）：[gitlab-ce-9.1.0-ce.0.el7.x86_64.rpm](https://pan.quark.cn/s/a3a0509d91db)&#13;
5、解压&#13;
```&#13;
yum -y install gitlab-ce-9.1.0-ce.0.el7.x86_64.rpm&#13;
```&#13;
6、重新配置&#13;
```&#13;
gitlab-ctl reconfigure&#13;
```&#13;
7、进入gitlab服务器地址（本机ip:80）后，设置完密码使用root登录即可完成部署&#13;
![image](https://github.com/user-attachments/assets/697e903c-5c92-4019-9000-e40d35ffa516)&#13;
。</description><guid isPermaLink="true">https://aglarevv.github.io//post/GitLab.html</guid><pubDate>Wed, 11 Sep 2024 10:55:42 +0000</pubDate></item><item><title>rk</title><link>https://aglarevv.github.io//post/rk.html</link><description>## Flynn分类法：&#13;
根据指令流和控制流的不同组合，分为SISD、SIMD、MISD、MIMD&#13;
计算机指令由操作码和操作数（地址码）组成&#13;
指令执行过程：取值-分析-执行&#13;
## 指令系统：&#13;
**CISC：复杂指令系统。</description><guid isPermaLink="true">https://aglarevv.github.io//post/rk.html</guid><pubDate>Fri, 23 Aug 2024 12:32:38 +0000</pubDate></item><item><title>MySQL</title><link>https://aglarevv.github.io//post/MySQL.html</link><description>## 什么是数据库？&#13;
数据库是专门用于存放计算机数据的软件仓库，这个仓库安装一定的数据结构对数据进行组织和存储&#13;
## 数据库的分类&#13;
**1、关系型数据库**&#13;
遵循ACID理论&#13;
常见的有：Oracle、MySQL、MariaDB、Microsoft SQL Server&#13;
**2、非关系型数据库**&#13;
也称为NoSQL数据库，是作为关系型数据库的一个有效补充&#13;
常见的有：Memcached、Redis、MongoDB&#13;
**关系型数据库与非关系型数据库的优缺点:**&#13;
关系型数据库：&#13;
优点：易于维护、使用方便、支持复杂sql操作&#13;
缺点：读写性能较差，灵活性欠缺，存在硬盘I/O瓶颈&#13;
非关系型数据库：&#13;
优点：存储格式灵活，速度快，成本低&#13;
缺点：不支持sql语句，复杂查询欠缺&#13;
&#13;
&gt; SQL（Structured Query Language）结构化查询语言&#13;
&#13;
## SQL分类：&#13;
DQL：数据查询语言：查询操作的SQL&#13;
DCL：数据控制语言，设定用户及权限的SQL&#13;
DDL：数据定义语言：表、序列、视图、索引的创建和销毁的SQL&#13;
DML：数据操作语言：CRUD&#13;
TCL：事务控制语言：控制事务的SQL&#13;
&#13;
## MySQL安装&#13;
&#13;
&lt;details&gt;&#13;
&lt;summary&gt;MySQL安装步骤：&lt;/summary&gt;&#13;
&#13;
&gt;&#13;
&#13;
1.清理环境&#13;
```&#13;
yum erase mariadb mariadb-server mariadb-libs mariadb-devel -y&#13;
```&#13;
2.创建用户&#13;
```&#13;
useradd -r sql -M -s /sbin/nologin&#13;
```&#13;
3.下载源码&#13;
```&#13;
wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.26.tar.gz&#13;
```&#13;
&#13;
&gt; 二进制安装使用下面的命令（可选），如使用二进制安装，跳过第4，7步&#13;
&#13;
```&#13;
wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz&#13;
```&#13;
4.安装编译工具&#13;
```&#13;
yum -y install ncurses ncurses-devel openssl-devel bison gcc gcc-c++ make cmake&#13;
```&#13;
5.创建MySQL目录&#13;
```&#13;
mkdir -p /opt/vv/{data,mysql,log}&#13;
```&#13;
6.解压&#13;
```&#13;
tar xzvf mysql-5.7.26.tar.gz -C /opt/vv/&#13;
```&#13;
&#13;
&gt; 二进制方式安装使用下面的命令解压并移动&#13;
&#13;
```&#13;
tar xzvf mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz &#13;
mv mysql-5.7.26-linux-glibc2.12-x86_64/* /opt/vv/mysql&#13;
```&#13;
7.编译安装&#13;
```&#13;
cd /opt/vv/mysql-5.7.26/&#13;
```&#13;
```&#13;
cmake . \&#13;
-DDOWNLOAD_BOOST=1 \&#13;
-DWITH_BOOST=boost/boost_1_59_0/ \&#13;
-DCMAKE_INSTALL_PREFIX=/opt/vv/mysql \&#13;
-DSYSCONFDIR=/etc \&#13;
-DMYSQL_DATADIR=/opt/vv/data \&#13;
-DINSTALL_MANDIR=/usr/share/man \&#13;
-DMYSQL_TCP_PORT=3306 \&#13;
-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \&#13;
-DDEFAULT_CHARSET=utf8 \&#13;
-DEXTRA_CHARSETS=all \&#13;
-DDEFAULT_COLLATION=utf8_general_ci \&#13;
-DWITH_READLINE=1 \&#13;
-DWITH_SSL=system \&#13;
-DWITH_EMBEDDED_SERVER=1 \&#13;
-DENABLED_LOCAL_INFILE=1 \&#13;
-DWITH_INNOBASE_STORAGE_ENGINE=1&#13;
```&#13;
&gt; 参数解释：&#13;
-DCMAKE_INSTALL_PREFIX=/opt/liuyh/mysql \   安装目录&#13;
-DSYSCONFDIR=/etc \   配置文件存放 （默认可以不安装配置文件）&#13;
-DMYSQL_DATADIR=/opt/liuyh/data \   数据目录   错误日志文件也会在这个目录&#13;
-DINSTALL_MANDIR=/usr/share/man \     帮助文档 &#13;
-DMYSQL_TCP_PORT=3306 \     默认端口&#13;
-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \  sock文件位置，用来做网络通信的，客户端连接服务器的时候用&#13;
-DDEFAULT_CHARSET=utf8 \    默认字符集。</description><guid isPermaLink="true">https://aglarevv.github.io//post/MySQL.html</guid><pubDate>Wed, 21 Aug 2024 10:23:03 +0000</pubDate></item><item><title>shell</title><link>https://aglarevv.github.io//post/shell.html</link><description>修改使用的shell解释器：&#13;
```&#13;
vi /etc/passwd&#13;
```&#13;
全局变量（环境变量）生效优先级：&#13;
&gt; 优先级依次递增&#13;
1. /etc/profile&#13;
2. /etc/profile.d&#13;
3. $HOME/.bash_profile&#13;
4. $HOME/.bashrc&#13;
5. /etc/bashrc&#13;
。</description><guid isPermaLink="true">https://aglarevv.github.io//post/shell.html</guid><pubDate>Wed, 21 Aug 2024 00:59:57 +0000</pubDate></item><item><title>nginx</title><link>https://aglarevv.github.io//post/nginx.html</link><description>多虚拟主机配置：&#13;
```&#13;
&gt; 多端口&#13;
1. 不同server监听不同端口&#13;
&gt; 多ip&#13;
1.添加虚拟ip： ifconfig 虚拟网卡名称 ip&#13;
2.不同server监听不同ip:port&#13;
3.关闭nginx并重新启动&#13;
```&#13;
location匹配机制：&#13;
&#13;
&gt; **匹配优先级按序递减**&#13;
&#13;
```&#13;
1. = 精确匹配&#13;
2. ^~ 以某开头，不支持正则&#13;
3. ~* 支持正则&#13;
4. 空 路径匹配&#13;
5. / 通配&#13;
```&#13;
状态页配置：&#13;
&#13;
&gt; 在location中添加：&#13;
&#13;
```&#13;
stub_status on; #开启状态页&#13;
access_log off; #关闭日志&#13;
```&#13;
目录浏览：&#13;
&#13;
&gt; 在location中添加：&#13;
&#13;
- 并且不允许有默认访问路径index&#13;
- 二者不能同时存在&#13;
```&#13;
autoindex on; &#13;
```&#13;
静态资源压缩：&#13;
&#13;
&gt; 在nginx配置文件中http中添加：&#13;
&#13;
```&#13;
gzip on;&#13;
gzip_http_version 1.1;&#13;
gzip_comp_level 4;&#13;
gzip_types text/plain application/javascript application/x-javascript&#13;
text/css application/xml text/javascript application/x-httpd-php image/jpeg&#13;
image/gif image/png;&#13;
```&#13;
url重写：&#13;
```&#13;
在location中添加：rewrite ^/(.*) 要转发的url/$1 flag标记&#13;
flag：&#13;
1. last 匹配最后一个符合的&#13;
2. break 匹配第一个符合的&#13;
3. redirect 临时重定向，爬虫不更新&#13;
4. permanent 永久重定向，爬虫更新&#13;
```&#13;
访问认证：&#13;
&#13;
&gt; 需下载httpd-tools工具包&#13;
&#13;
```&#13;
执行命令： htpasswd -bc 存放文件位置 用户名 密码&#13;
配置文件location中添加：&#13;
auth_basic 'sample auth';&#13;
auth_basic_user_file 上面生成的文件位置；&#13;
```&#13;
反向代理集群配置：&#13;
&#13;
&gt; weight:	内容为数字，权重比，数字越大，所获得的请求越多&#13;
&gt; max_fails: 内容为数字，nginx尝试连接该节点的失败次数&#13;
&gt; fail_timeout: 内容为数字单位秒，与失败次数联合使用，到达上述失败次数后间隔多长再次请求&#13;
&gt; backup: 备份机，当其他非备份机无法使用时请求分到备份机，在使用ip_hash时无效&#13;
&#13;
```&#13;
upstream  my_cluster{&#13;
    server 192.168.209.138 weight=1 max_fails=1 fail_timeout=10s backup;&#13;
}&#13;
&#13;
localtion /{&#13;
    proxy_pass http://my_cluter;&#13;
}&#13;
```&#13;
负载均衡策略：&#13;
```&#13;
轮询：默认&#13;
权重：使用较多&#13;
ip_hash：临时存储，使用redis代替&#13;
fair：智能加载&#13;
least_conn：最闲连接&#13;
url_hash：固定业务，用于分布式微服务&#13;
```。</description><guid isPermaLink="true">https://aglarevv.github.io//post/nginx.html</guid><pubDate>Mon, 19 Aug 2024 02:46:17 +0000</pubDate></item><item><title>运维-linux</title><link>https://aglarevv.github.io//post/yun-wei--linux.html</link><description>top命令：动态监控系统资源&#13;
```&#13;
top -d 1：每秒刷新&#13;
P：按cpu使用率排序&#13;
M：按内存使用率排序&#13;
```&#13;
校对时间：&#13;
&#13;
&gt; 使用ntp工具进行校对&#13;
&#13;
```&#13;
yum install ntp -y&#13;
ntpdate cn.pool.ntp.org&#13;
```&#13;
循环调度任务：&#13;
&#13;
&gt; cronie工具包里的组件&#13;
&#13;
```&#13;
yum install cronie -y&#13;
crontab -e 进入编辑界面&#13;
```&#13;
tail命令：查看文件尾部&#13;
```&#13;
tail -f 动态查看&#13;
```&#13;
日志轮转：&#13;
```&#13;
默认日志生成在/var/log/下&#13;
messages：linux系统本身运行时的日志&#13;
secure：认证，安全的日志&#13;
postfix：邮件相关的日志&#13;
cron：crond，at进行相关的日志&#13;
dmsg：系统启动相关的日志&#13;
yum.log：yum相关的日志&#13;
&#13;
默认配置文件：/etc/logrotate.conf&#13;
配置文件存放路径：/etc/logrotate.d/&#13;
使用时在配置文件中引入自定义配置文件&#13;
```&#13;
sed命令：字符流编辑器&#13;
&#13;
&gt; 操作、过滤、转换文本内容的工具，配合正则对文件实现快速增删查改&#13;
&#13;
```&#13;
sed -n 'p' file ：打印文件所有行&#13;
sed -i 's/**/**/g' file ：修改文件&#13;
```&#13;
awk命令：文本格式化，转换为标准的excel表样式&#13;
HP服务器硬盘位置：&#13;
```&#13;
/dev/cciss/c0d0p1：c0是第一个控制器，d0是第一块磁盘，p1是分区1&#13;
```&#13;
磁盘相关：&#13;
```&#13;
查看磁盘分区：lsblk&#13;
查看当前使用磁盘文件：df -TH&#13;
磁盘自动开机挂载：/etc/rc.d/rc.local文件里添加挂载命令。</description><guid isPermaLink="true">https://aglarevv.github.io//post/yun-wei--linux.html</guid><pubDate>Sat, 17 Aug 2024 02:58:01 +0000</pubDate></item><item><title>EMC-梳理复习</title><link>https://aglarevv.github.io//post/EMC--shu-li-fu-xi.html</link><description>电磁兼容性定义：&#13;
 ```&#13;
电子设备或系统在预定的电磁环境中能够可靠的工作，并且电子设备或系统之间不会产生不良的影响&#13;
```&#13;
电磁发射方式有两大类：&#13;
```&#13;
通过电源线发射，叫传导发射&#13;
通过辐射电磁波，叫辐射发射&#13;
电源线传导发射也会产生伴随辐射发射，产生辐射性的电磁骚扰&#13;
```&#13;
电磁兼容三要素：&#13;
```&#13;
骚扰源，敏感源，耦合路径&#13;
```&#13;
四种耦合路径：&#13;
```&#13;
电源线耦合，地线耦合，近场耦合，天线耦合&#13;
```&#13;
**如何理解地线耦合:**&#13;
```&#13;
第一，地线是电源或信号电流的返回路径，所以地线电流导致地线上有电压。</description><guid isPermaLink="true">https://aglarevv.github.io//post/EMC--shu-li-fu-xi.html</guid><pubDate>Fri, 26 Jul 2024 14:14:14 +0000</pubDate></item><item><title>EMC-测试分类</title><link>https://aglarevv.github.io//post/EMC--ce-shi-fen-lei.html</link><description>1.EMI（Electro-Magnetic Interference）---电磁骚扰测试&#13;
&#13;
- Radiated Emission －空间辐射测试&#13;
- Conducted Emission－电源传导测试&#13;
- Harmonic－谐波电流骚扰测试&#13;
- Flicker－电压变化与闪烁测试&#13;
&#13;
2. EMS（Electro-Magnetic Susceptibility）---电磁抗扰度测试&#13;
&#13;
- ESD－静电抗扰度测试&#13;
- RS－射频电磁场辐射抗扰度测试&#13;
- CS－射频场感应的传导骚扰抗扰度测试&#13;
- DIP－电压暂降，短时中断和电压变化抗扰度测试&#13;
- SURGE－浪涌（冲击）抗扰度测试&#13;
- EFT－电快速瞬变脉冲群抗扰度测试&#13;
- FMF－工频磁场抗扰度测试&#13;
&#13;
[EMC测试项目详述下载](https://github.com/user-attachments/files/16105308/EMC.pdf)&#13;
[EMC测试指标及测试方法介绍下载](https://github.com/user-attachments/files/16105309/EMC.pdf)。</description><guid isPermaLink="true">https://aglarevv.github.io//post/EMC--ce-shi-fen-lei.html</guid><pubDate>Fri, 05 Jul 2024 05:31:53 +0000</pubDate></item><item><title>EMC-基础理论</title><link>https://aglarevv.github.io//post/EMC--ji-chu-li-lun.html</link><description>电磁干扰的三要素&#13;
`骚扰源，耦合途径，敏感设备`&#13;
电磁兼容控制技术&#13;
`最常用，最基本的：屏蔽、滤波、接地`&#13;
电磁骚扰的传播途径分为两大类&#13;
`通过导体传播的电磁骚扰-传导骚扰；通过空间传播的电磁骚扰-辐射骚扰`&#13;
共阻抗耦合&#13;
`由两个回路经公共阻抗耦合而产生，干扰量是电流 i，或变化的电流 di/dt`&#13;
容性耦合&#13;
`在干扰源与干扰对象之间存在着分布电容而产生，干扰量是变化的电场，即变化的电压 du/dt`&#13;
&gt; [!TIP]&#13;
&gt; **分布电容**：导体之间的电容是由于导体表面之间的电场产生的。</description><guid isPermaLink="true">https://aglarevv.github.io//post/EMC--ji-chu-li-lun.html</guid><pubDate>Fri, 05 Jul 2024 03:28:46 +0000</pubDate></item><item><title>EMC-术语</title><link>https://aglarevv.github.io//post/EMC--shu-yu.html</link><description>## 基本概念 &#13;
电磁环境 electromagnetic environment&#13;
``给定场所的所有电磁现象的总和``&#13;
电磁兼容性 electromagnetic compatibility（EMC） &#13;
``设备或系统在其电磁环境中能正常工作且不对该环境中任何事物构成不能承受的电磁骚扰的能力``&#13;
 电磁骚扰 electromagnetic disturbance&#13;
``任何可能引起装置、设备或系统性能降低或对有生命或无生命物质产生损害作用的电磁现象``&#13;
电磁干扰 electromagnetic interference（EMI）&#13;
``电磁骚扰引起的设备、传输通道或系统性能的下降``&#13;
``电磁干扰是电磁骚扰引起的后果``&#13;
辐射发射 Radiated Emission (RE)&#13;
``通过空间传播的、有用的或不希望有的电磁能量``&#13;
传导发射 Conducted Emission (CE)&#13;
电磁噪声 electromagnetic noise&#13;
``一种明显不传送信息的时变电磁现象，它可能与有用信号叠加或组合``&#13;
无用信号 unwanted signal，undesired signal&#13;
``可能损害有用信号接收的信号``&#13;
干扰信号 interfering signal&#13;
``损害有用信号接收的信号``&#13;
抗扰度&#13;
``装置、设备或系统面临电磁骚扰不降低运行性能的能力``&#13;
电磁敏感度 Electromagnetic Susceptibility (EMS) **（敏感度高，抗扰度就低）**&#13;
``在电磁骚扰作用下，装置、设备或系统不能避免性能降低的能力``&#13;
``由于电磁能量造成性能下降的容易程度``&#13;
辐射敏感度 Radiated Susceptibility (RS)&#13;
``对造成设备性能降级的辐射骚扰场的度量``&#13;
传导敏感度 Conducted Susceptibility (CS)&#13;
``当引起设备性能降级时，对从传导方式引入的骚扰信号电流或电压的度量``&#13;
电磁兼容电平&#13;
``规定加在工作于指定条件下的装置、设备或系统上的最大电磁骚扰电平。</description><guid isPermaLink="true">https://aglarevv.github.io//post/EMC--shu-yu.html</guid><pubDate>Wed, 03 Jul 2024 04:53:11 +0000</pubDate></item></channel></rss>